{"name":"Codeigniter-multi-apps","tagline":"Multi-websites on single installation of CodeIgniter 2.x.x with shared resources","body":"CodeIgniter-Multi-Apps\r\n======================\r\n\r\n###Multi-websites on single installation of CodeIgniter 2.x.x with shared resources\r\n\r\nFor the following examples, we'll create two applications:\r\n\r\n* 1. a **web** application\r\n* 2. a **mobile** application\r\n\r\nBoth application will share the same resources: **models**, **libraries**, **helpers**.\r\n\r\nWhen you download the distribution and extract the archive, you end up with this layout:\r\n\r\n    CodeIgniter_2.x.x/\r\n        application/\r\n        system/\r\n        user_guide/\r\n        index.php\r\n        license.txt       \r\n                \r\nLet's look at my layout for multiple websites:\r\n\r\n    application/\r\n        web/\r\n            config/\r\n            controllers/\r\n            hooks/\r\n            views/\r\n        mobile/\r\n            config/\r\n            controllers/\r\n            hooks/\r\n            views/\r\n        shared/\r\n            helpers/\r\n            libraries/\r\n            models/\r\n            third_party/\r\n    system/\r\n    webroot/\r\n        index.php\r\n\r\n**Models**, **libraries** and **helpers** are the same for **web** and **mobile** applications.\r\n\r\nThis folder layout lets you store files outside the webroot, primarily for added **security**. Those files won't be accessible through a web browser, but they will be accessible to your PHP code.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}